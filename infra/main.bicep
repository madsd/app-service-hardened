@description('Specifies the Azure location where the resources should be created.')
param location string = resourceGroup().location

@description('Name of the Azure App Service Plan.')
@minLength(5)
@maxLength(40)
param appServicePlanName string = 'asp-${uniqueString(resourceGroup().id)}'

@description('OS of your Azure App Service plan.')
@allowed([
	'Windows'
	'Linux'
  'Windows Container'
])
param appServicePlanHostingOS string = 'Windows'

@description('Provide a tier of your Azure App Service.')
param appServicePlanSku string = 'P1v3'

@description('Name of the Azure Website.')
@minLength(5)
@maxLength(40)
param webSiteName string = 'app-${uniqueString(resourceGroup().id)}'

var appUserManagedIdentityName = 'umi-${uniqueString(resourceGroup().id)}'

resource appUserManagedIdentity 'Microsoft.ManagedIdentity/userAssignedIdentities@2018-11-30' = {
	name: appUserManagedIdentityName
	location: location
}

resource appServicePlan 'Microsoft.Web/serverFarms@2024-04-01' = {
	name: appServicePlanName
	location: location
	sku: {
		name: appServicePlanSku
	}
	properties: {
		reserved: appServicePlanHostingOS == 'Linux' ? true : false
    hyperV: appServicePlanHostingOS == 'Windows Container' ? true : false
	}
}

resource webSite 'Microsoft.Web/sites@2024-04-01' = {
	name: webSiteName
	location: location
	properties: {
		serverFarmId: appServicePlan.id
    autoGeneratedDomainNameLabelScope: 'TenantReuse'
    endToEndEncryptionEnabled: true
		vnetImagePullEnabled: true
    vnetContentShareEnabled: true
    vnetBackupRestoreEnabled: true
		vnetRouteAllEnabled: true
    publicNetworkAccess: 'Enabled'
		httpsOnly: true
		siteConfig: {
      ftpsState: 'Disabled'
      scmIpSecurityRestrictionsDefaultAction: 'Deny'
      scmMinTlsVersion: '1.3'
      minTlsVersion: '1.3'
		}
	}
	identity: {
		type: 'UserAssigned'
		userAssignedIdentities: { 
			'${appUserManagedIdentity.id}': {}
		}
	}
}
